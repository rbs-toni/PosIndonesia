@page "/"
@using PosIndonesia.Models
@using PosIndonesia.Services
@inject PostalInterop Postal

<PageTitle>Home</PageTitle>

<PosHero @bind-SearchString="@_searchString"
         @bind-SearchString:after=OnSearchStringChanged
         LatLng="_latLng"
         ProvincesCount="@(_miniStats?.ProvincesCount ?? 0)"
         DistrictsCount="@(_miniStats?.DistrictsCount ?? 0)"
         RegenciesCount="@(_miniStats?.RegenciesCount ?? 0)"
         VillagesCount="@(_miniStats?.VillagesCount ?? 0)" />

<PosPagedPostal Paged="_pagedPostal"
                OnPostalSelected="OnPostalSelected"
                SortOrderChanged="OnSortOrderChanged" />

@code {
    string? _searchString;

    MiniStats? _miniStats;
    PagedPostal? _pagedPostal;
    LatLng? _latLng;
    SortOrderCollection _orders = new();

    protected override async Task OnInitializedAsync()
    {
        _miniStats = await Postal.GetStatsAsync();
        _pagedPostal = await Postal.GetPagedPostalAsync(_searchString, null, 1, 100);
        StateHasChanged();
    }

    async Task OnSearchStringChanged()
    {
        _pagedPostal = await Postal.GetPagedPostalAsync(_searchString, _orders, _pagedPostal?.Page ?? 1, _pagedPostal?.PageSize ?? 100);
    }

    async Task OnSortOrderChanged(SortOrderCollection sortOrders)
    {
        _orders = sortOrders;
        _pagedPostal = await Postal.GetPagedPostalAsync(_searchString, _orders, _pagedPostal?.Page ?? 1, _pagedPostal?.PageSize ?? 100);
    }

    string OrderToDirection(int order)
    {
        if (order == 1)
        {
            return "asc";
        }
        else if (order == 2)
        {
            return "desc";
        }
        else return "";
    }

    void OnPostalSelected(Postal postal)
    {
        _latLng = new LatLng(postal.Latitude, postal.Longitude);
    }
}
